<Window x:Class="PathFinder.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:pf="clr-namespace:PathFinder"
        Title="PathFinder" Height="600" Width="800"
        x:Name="view">
    <Window.Resources>
        <pf:RadioIsCheckedConverter x:Key="RadioIsChecked"></pf:RadioIsCheckedConverter>
        <pf:HeuristicsEnabledConverter x:Key="HeuristicsEnabledConverter"></pf:HeuristicsEnabledConverter>
    </Window.Resources>
    <DockPanel>
        <DockPanel DockPanel.Dock="Right" Background="White" Panel.ZIndex="99">

            <GroupBox Header="Grid Controls" DockPanel.Dock="Bottom">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="40" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="65" />
                        <ColumnDefinition Width="65" />
                        <ColumnDefinition Width="65" />
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Content="Clear All" Command="{Binding ClearAllCommand}" />
                    <Button Grid.Column="1" Content="Clear Path" Command="{Binding ClearPathCommand}" />
                    <Button Grid.Column="2" Command="{Binding GenMazeCommand}">
                        <TextBlock Text="Generate Maze" TextAlignment="Center" TextWrapping="Wrap" />
                    </Button>
                </Grid>
            </GroupBox>

            <GroupBox Header="Playback Controls" DockPanel.Dock="Bottom">
                <UniformGrid Rows="1" Columns="3" Height="40" >
                    <Button Content="Start" Command="{Binding StartCommand}" />
                    <Button Content="Pause" Command="{Binding PauseCommand}" />
                    <Button Content="Stop" Command="{Binding StopCommand}" />
                </UniformGrid>
            </GroupBox>

            <GroupBox Header="Search Options">
                <StackPanel Orientation="Vertical">
                    <GroupBox Header="Algorithm">
                        <StackPanel Orientation="Vertical">
                            <RadioButton Content="A-Star" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Algorithm.AStar}}" />
                            <RadioButton Content="Breadth-First" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Algorithm.BreadthFirst}}" />
                            <RadioButton Content="Depth-First" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Algorithm.DepthFirst}}" />
                            <RadioButton Content="Depth-First (Random)" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked},
								ConverterParameter={x:Static pf:Algorithm.DepthFirstRandom}}" />
                            <RadioButton Content="Hill-Climbing" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked},
								ConverterParameter={x:Static pf:Algorithm.HillClimbing}}"/>
                            <RadioButton Content="Best-First" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Algorithm.BestFirst}}" />
                            <RadioButton Content="Dijkstra" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Algorithm.Dijkstra}}" />
                            <RadioButton Content="Jump Point Search" IsChecked="{Binding Algo, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Algorithm.JumpPoint}}" />
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Optional Settings">
                        <StackPanel Orientation="Vertical">
                            <CheckBox Content="Diagonals Allowed"  Name="DiagBox" 
                                      IsChecked="{Binding DiagonalsAllowed}"/>
                            <CheckBox Content="Corner Crossing Allowed" 
                                      IsEnabled="{Binding ElementName=DiagBox, Path=IsChecked}"
                                      IsChecked="{Binding CornerCutAllowed}"/>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Header="Heuristic Function"
                              IsEnabled="{Binding Algo, Converter={StaticResource HeuristicsEnabledConverter}}">
                        <StackPanel Orientation="Vertical">
                            <RadioButton Content="Manhattan" IsChecked="{Binding HeuristicFunction, 
								Converter={StaticResource RadioIsChecked},
								ConverterParameter={x:Static pf:Heuristic.Manhattan}}" />
                            <RadioButton Content="Euclidean" IsChecked="{Binding HeuristicFunction, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Heuristic.Euclidean}}" />
                            <RadioButton Content="Chebyshev" IsChecked="{Binding HeuristicFunction, 
								Converter={StaticResource RadioIsChecked}, 
								ConverterParameter={x:Static pf:Heuristic.Chebyshev}}" />
                        </StackPanel>

                        <!--Fade the groupbox in/out on enable/disable-->
                        <GroupBox.Style>
                            <Style TargetType="GroupBox">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Trigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.EnterActions>
                                        <Trigger.ExitActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </Trigger.ExitActions>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </GroupBox.Style>
                    </GroupBox>
                </StackPanel>
            </GroupBox>
        </DockPanel>
        <Grid>
            <!-- Canvas to display all dynamic elements -->
            <ItemsControl  Name="ItemsCanvas" Padding="0"
                       ScrollViewer.CanContentScroll="True"
                       VirtualizingStackPanel.IsVirtualizing="True"
                       VirtualizingStackPanel.VirtualizationMode="Recycling"
                           ItemsSource="{Binding Grid.Nodes, IsAsync=True}">
                <ItemsControl.Resources>

                    <!--Template for Node-->
                    <DataTemplate DataType="{x:Type pf:Node}">
                        <Rectangle Stroke="#CC000000" StrokeThickness="0.25"
                                   RenderTransformOrigin="0.5,0.5"
                                   Width="{x:Static pf:Node.Nodesize}"
                                   Height="{x:Static pf:Node.Nodesize}"
                                   Name="nodeRect">
                            <Rectangle.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform x:Name="rectScale" ScaleX="1" ScaleY="1" />
                                    <TranslateTransform X="{Binding CoordX}" Y="{Binding CoordY}"></TranslateTransform>
                                </TransformGroup>
                            </Rectangle.RenderTransform>

                            <Rectangle.Style>
                                <Style TargetType="{x:Type Rectangle}">
                                    <Setter Property="Fill" Value="White"></Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static pf:NodeState.Start}">
                                            <Setter  Property="Fill" Value="#00FF00"></Setter>
                                        </DataTrigger>

                                        <DataTrigger Binding="{Binding State}" Value="{x:Static pf:NodeState.End}">
                                            <Setter Property="Fill" Value="Red"></Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Rectangle.Style>
                        </Rectangle>
                    </DataTemplate>
                </ItemsControl.Resources>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True" Background="White"
                            Width="{Binding ElementName=ItemsCanvas, Path=ActualWidth}"
                            Height="{Binding ElementName=ItemsCanvas, Path=ActualHeight}"
                            VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style TargetType="ContentPresenter">
                        <Style.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Panel.ZIndex" Value="99"></Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ItemsControl.ItemContainerStyle>
            </ItemsControl>

            <Polyline Points="{Binding Grid.Path}" 
                      Panel.ZIndex="999"
                      Stroke="Yellow"
                      StrokeThickness="4"
                      Name="PathLine" />
        </Grid>
    </DockPanel>
</Window>
